Code3:

CREATE TABLE EMPLOYEES (
    EMPLOYEE_ID NUMBER PRIMARY KEY,
    FIRST_NAME VARCHAR2(50),
    LAST_NAME VARCHAR2(50),
    DEPARTMENT_NAME VARCHAR2(50),
    SALARY NUMBER
);

INSERT INTO EMPLOYEES (EMPLOYEE_ID, FIRST_NAME, LAST_NAME, DEPARTMENT_NAME, SALARY)
VALUES (1, 'John', 'Doe', 'Sales', 50000);

INSERT INTO EMPLOYEES (EMPLOYEE_ID, FIRST_NAME, LAST_NAME, DEPARTMENT_NAME, SALARY)
VALUES (2, 'Jane', 'Smith', 'HR', 60000);

INSERT INTO EMPLOYEES (EMPLOYEE_ID, FIRST_NAME, LAST_NAME, DEPARTMENT_NAME, SALARY)
VALUES (3, 'Michael', 'Johnson', 'Sales', 55000);

INSERT INTO EMPLOYEES (EMPLOYEE_ID, FIRST_NAME, LAST_NAME, DEPARTMENT_NAME, SALARY)
VALUES (4, 'Emily', 'Davis', 'IT', 70000);

CREATE OR REPLACE PROCEDURE UPDATE_SALES_SALARY (
    P_PERCENTAGE IN NUMBER  -- Taking percentage as an input parameter
) AS

BEGIN
    -- Update salary for Sales department employees
    UPDATE EMPLOYEES
    SET SALARY = SALARY + (SALARY * P_PERCENTAGE / 100)
    WHERE DEPARTMENT_NAME = 'Sales';

    -- Commit the changes
    COMMIT;
    
    -- Output message
    DBMS_OUTPUT.PUT_LINE('Salary updated successfully by ' || P_PERCENTAGE || '% for Sales department employees.');
EXCEPTION
    WHEN NO_DATA_FOUND THEN
       DBMS_OUTPUT.PUT_LINE('nO EMPLOYEES FOUND');
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Error: ' || SQLERRM);
END UPDATE_SALES_SALARY;
/

Execute
BEGIN
    UPDATE_SALES_SALARY(10);  -- Example: Giving a 10% raise
END;
/

